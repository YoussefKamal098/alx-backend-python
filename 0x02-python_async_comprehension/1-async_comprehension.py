#!/usr/bin/env python3
"""
This module contains an example of asynchronous comprehensions.
"""
from typing import List
import asyncio

async_generator = __import__('0-async_generator').async_generator


async def async_comprehension() -> List[float]:
    """
    Asynchronously collects 10 random float numbers
    generated by `async_generator`.

    This function uses asynchronous comprehension to collect the
    values produced by the `async_generator`. It waits for each
    value to be generated asynchronously, collects them in a list,
    and then returns the list.

    Returns:
        List[float]: A list of 10 random floating-point numbers.
    """
    random_float_numbers = [numbers async for numbers in async_generator()]
    return random_float_numbers
